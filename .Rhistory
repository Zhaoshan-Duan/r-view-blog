colour="#CC0000", size=4, fontface="bold")
null_plot <- null_dist %>%
visualize(method = "both",  dens_color = "blue") +
annotate(
geom="label",
x=0, y=0.15,
label="Simulated Null Distribution",
fill = "grey",
colour="black", size=5, fontface="bold") +
labs(x="t-statistics",
y="Density")
null_plot
null_plot <- null_dist %>%
visualize(method = "both",  dens_color = "blue") +
annotate(
geom="label",
x=0, y=0.15,
label="Simulated Null Distribution",
fill = "grey",
colour="black", size=3, fontface="bold") +
labs(x="t-statistics",
y="Density")
null_plot
null_plot <- null_dist %>%
visualize(method = "both",  dens_color = "blue") +
annotate(
geom="label",
x=0, y=0.15,
label="Simulated Null Distribution",
fill = "grey",
colour="black", size=4, fontface="bold") +
labs(x="t-statistics",
y="Density")
null_plot
null_plot <- null_dist %>%
visualize(method = "both",  dens_color = "blue") +
annotate(
geom="label",
x=0, y=0.15,
label="Simulated Null Distribution",
fill = "grey",
colour="black", size=3.5, fontface="bold") +
labs(x="t-statistics",
y="Density")
null_plot
null_plot <- null_dist %>%
visualize(method = "both",  dens_color = "blue") +
annotate(
geom="label",
x=0, y=0.15,
label="Simulated Null Distribution",
fill = "grey",
colour="black", size=3, fontface="bold") +
labs(x="t-statistics",
y="Density")
null_plot
p_plot <- null_plot +
shade_p_value(obs_stat = obs_t, direction = "both")
p_plot
p_plot <- null_plot +
shade_p_value(obs_stat = obs_t, direction = "both")
p_plot
null_distribution %>%
get_p_value(obs_stat = obs_t, direction = "right")
null_dist %>%
get_p_value(obs_stat = obs_t, direction = "right")
null_dist %>%
get_p_value(obs_stat = obs_t, direction = "both")
base_r_res$p.value
visualize(sampling_dist) +
shade_confidence_interval(ci)
chocolate <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-18/chocolate.csv')
chocolate %>%
unnest_token(words, rating)
library(tidyverse)
library(infer)
library(janitor)
library(tidytext)
install.packages("tidytext")
chocolate %>%
unnest_token(words, rating)
library(tidyverse)
library(infer)
library(janitor)
library(tidytext)
chocolate %>%
unnest_token(words, rating)
chocolate %>%
unnest_tokens(words, rating)
chocolate %>%
unnest_tokens(token = "words", rating)
View(chocolate)
chocolate %>%
unnest_tokens(token = "words", most_memorable_characteristics)
chocolate %>%
unnest_tokens("words", most_memorable_characteristics)
p_plot <- null_plot +
shade_p_value(obs_stat = obs_t, direction = "both")
p_plot
p_plot +
annotate(
geom="label",
x=1.2, y=0.5,
label="Observed t-statistics",
colour="red", size=4, fontface="bold") +
annotate(
geom="label",
x=3, y=0.03,
label = "p-value",
colour="#CC0000", size=4, fontface="bold") +
annotate(
geom="label",
x=-3.5, y=0.03,
label = "p-value",
colour="#CC0000", size=4, fontface="bold")
chocholate %>%
geom_boxplot(aes(rating))
chocholate %>% ggplot() +
geom_boxplot(aes(rating))
chocholate %>% ggplot(aes(rating)) +
geom_boxplot()
chocolate %>% ggplot(aes(rating)) +
geom_boxplot()
chocolate %>% ggplot(aes(rating, coca_percent)) +
geom_boxplot()
chocolate %>% ggplot(aes(rating)) +
geom_boxplot()
View(chocolate)
chocolate %>%
unnest_tokens("words", most_memorable_characteristics, pattern=",")
chocolate %>%
unnest_tokens("words", most_memorable_characteristics,token = stringr::str_split, pattern=",")
chocolate %>%
unnest_tokens("words", most_memorable_characteristics,token = stringr::str_split, pattern=",") %>%
count(words)
chocolate %>%
unnest_tokens("words", most_memorable_characteristics,token = stringr::str_split, pattern=",") %>%
count(words, sort=T)
chocolate %>%
unnest_tokens("words", most_memorable_characteristics,token = stringr::str_split, pattern=",") %>%
count(words, sort=T) %>%
ggplot(aes(rating), fill=words) +
geom_boxplot()
chocolate %>%
unnest_tokens("words", most_memorable_characteristics,token = stringr::str_split, pattern=",") %>%
count(words, sort=T) %>%
ggplot(aes(ratings), fill=words) +
geom_boxplot()
chocolate %>%
unnest_tokens("words", most_memorable_characteristics,token = stringr::str_split, pattern=",") %>%
count(words, sort=T) %>%
ggplot(aes(x = rating, y = cocoa_percent), fill=words) +
geom_boxplot()
chocolate %>%
unnest_tokens("words", most_memorable_characteristics,token = stringr::str_split, pattern=",") %>%
ggplot(aes(x = rating, y = cocoa_percent), fill=words) +
geom_boxplot()
chocolate %>%
unnest_tokens("words", most_memorable_characteristics,token = stringr::str_split, pattern=",") %>%
ggplot(aes(x = rating, y = cocoa_percent)) +
geom_boxplot()
chocolate_split <- chocolate %>%
unnest_tokens("words", most_memorable_characteristics,token = stringr::str_split, pattern=",")
chocolate_split %>%
unnest_tokens("words", most_memorable_characteristics,token = stringr::str_split, pattern=",") %>%
ggplot(aes(x = rating, y = cocoa_percent)) +
geom_boxplot()
chocolate_split
chocolate_split %>%
group_by(words) %>%
summarize(n=n())
chocolate_split %>%
group_by(words) %>%
summarize(n=n()) %>%
arrange(desc=T)
chocolate_split %>%
group_by(words) %>%
summarize(n=n()) %>%
arrange(desc=T)
chocolate_split %>%
group_by(words) %>%
summarize(n=n()) %>%
arrange(desc=T)
chocolate_split %>%
group_by(words) %>%
summarize(n=n()) %>%
arrange(desc=F)
chocolate_split %>%
group_by(words) %>%
summarize(n=n()) %>%
arrange(desc=F)
chocolate_split %>%
unnest_tokens("words", most_memorable_characteristics,token = stringr::str_split, pattern=",") %>%
ggplot(aes(x = rating, y = cocoa_percent)) +
geom_boxplot()
chocolate_split %>%
group_by(words) %>%
summarize(n=n()) %>%
arrange(desc=F)
chocolate_split %>%
group_by(words) %>%
summarize(n=n()) %>%
arrange(desc=F)
chocolate_split %>%
unnest_tokens("words", most_memorable_characteristics,token = stringr::str_split, pattern=",") %>%
ggplot(aes(x = rating, y = cocoa_percent)) +
geom_boxplot()
base_r_res$statistic
p_plot +
annotate(
geom="label",
x=1.2, y=0.5,
label="Observed t-statistics = 2.3590",
colour="red", size=4, fontface="bold") +
annotate(
geom="label",
x=3, y=0.03,
label = "p-value",
colour="#CC0000", size=4, fontface="bold") +
annotate(
geom="label",
x=-3.5, y=0.03,
label = "p-value",
colour="#CC0000", size=4, fontface="bold")
null_dist %>%
get_p_value(obs_stat = obs_t, direction = "both")
boostrap_dist <- ncbirths_complete %>%
specify(weight ~ habit) %>%
generate(reps = 5000, type = "permute") %>%
calculate(stat = "t", order = c("nonsmoker", "smoker"))
boostrap_dist <- ncbirths_complete %>%
specify(weight ~ habit) %>%
generate(reps = 5000, type = "bootstrap") %>%
calculate(stat = "t", order = c("nonsmoker", "smoker"))
percentile_ci <- boostrap_dist %>%
get_confidence_interval(level = 0.95, type = "percentile")
percentile_ci
visualize(sampling_dist) +
shade_confidence_interval(percentile_ci)
visualize(boostrap_dist) +
shade_confidence_interval(percentile_ci)
base_r_res$conf.int
base_r_res$conf.int
base_r_res$conf.int
boostrap_dist <- ncbirths_complete %>%
specify(weight ~ habit, success="nonsmoke") %>%
# remove hypothesize()
# hypothesize(null = "independence") %>%
generate(reps = 5000, type = "bootstrap") %>% # change `type` to "bootstrap"
calculate(stat = "t", order = c("nonsmoker", "smoker"))
boostrap_dist <- ncbirths_complete %>%
specify(weight ~ habit, success = "nonsmoker") %>%
# remove hypothesize()
# hypothesize(null = "independence") %>%
generate(reps = 5000, type = "bootstrap") %>% # change `type` to "bootstrap"
calculate(stat = "t", order = c("nonsmoker", "smoker"))
percentile_ci <- boostrap_dist %>%
get_confidence_interval(level = 0.95, type = "percentile")
percentile_ci
boostrap_dist <- ncbirths_complete %>%
specify(weight ~ habit) %>%
# remove hypothesize()
# hypothesize(null = "independence") %>%
generate(reps = 5000, type = "bootstrap") %>% # change `type` to "bootstrap"
calculate(stat = "t", order = c("nonsmoker", "smoker"))
percentile_ci <- boostrap_dist %>%
get_confidence_interval(level = 0.95, type = "percentile")
percentile_ci
percentile_ci <- boostrap_dist %>%
get_confidence_interval(level = 0.95, type = "percentile")
visualize(boostrap_dist) +
shade_confidence_interval(percentile_ci)
se_ci <- bootstrap_distribution %>%
get_confidence_interval(level = 0.95, type = "se",
point_estimate = obs_diff_prop)
se_ci <- bootstrap_distn %>%
get_confidence_interval(level = 0.95, type = "se",
point_estimate = obs_t)
se_ci <- bootstrap_dist %>%
get_confidence_interval(level = 0.95, type = "se",
point_estimate = obs_t)
set.seed(42)
bootstrap_dist <- ncbirths_complete %>%
specify(weight ~ habit) %>%
# remove hypothesize()
# hypothesize(null = "independence") %>%
generate(reps = 5000, type = "bootstrap") %>% # change `type` to "bootstrap"
calculate(stat = "t", order = c("nonsmoker", "smoker"))
percentile_ci <- bootstrap_dist %>%
get_confidence_interval(level = 0.95, type = "percentile")
visualize(bootstrap_dist) +
shade_confidence_interval(percentile_ci)
se_ci <- boostrap_dist %>%
get_confidence_interval(level = 0.95, type = "se",
point_estimate = obs_t)
se_ci
set.seed(42)
bootstrap_dist <- ncbirths_complete %>%
specify(weight ~ habit) %>%
# remove hypothesize()
# hypothesize(null = "independence") %>%
generate(reps = 1000, type = "bootstrap") %>% # change `type` to "bootstrap"
calculate(stat = "t", order = c("nonsmoker", "smoker"))
percentile_ci <- bootstrap_dist %>%
get_confidence_interval(level = 0.95, type = "percentile")
visualize(bootstrap_dist) +
shade_confidence_interval(percentile_ci)
se_ci <- boostrap_dist %>%
get_confidence_interval(level = 0.95, type = "se",
point_estimate = obs_t)
se_ci
se_ci <- boostrap_dist %>%
get_confidence_interval(level = 0.95, type = "se",
point_estimate = obs_t)
se_ci
base_r_res$conf.int
base_r_res <- t.test(weight ~ habit, data = ncbirths_complete, alternative="two.sided")
base_r_res
percentile_ci <- bootstrap_dist %>%
get_confidence_interval(level = 0.95, type = "percentile")
visualize(bootstrap_dist) +
shade_confidence_interval(percentile_ci)
View(bootstrap_dist)
pt(obs_t, df=nrow(ncbirths)-2, lower.tail=FALSE)*2
pt(obs_t %>% dplyr:pull(), df=nrow(ncbirths)-2, lower.tail=FALSE)*2
pt(obs_t %>% pull(), df=nrow(ncbirths)-2, lower.tail=FALSE)*2
null_dist %>%
get_p_value(obs_stat = obs_t, direction = "both")
base_r_res$p.value
gc()
base_r_res$conf.int
set.seed(42)
bootstrap_dist <- ncbirths_complete %>%
specify(weight ~ habit) %>%
# remove hypothesize()
# hypothesize(null = "independence") %>%
generate(reps = 1000, type = "bootstrap") %>% # change `type` to "bootstrap"
# change stat to "diff in mean"
calculate(stat = "diff in mean", order = c("nonsmoker", "smoker"))
set.seed(42)
bootstrap_dist <- ncbirths_complete %>%
specify(weight ~ habit) %>%
# remove hypothesize()
# hypothesize(null = "independence") %>%
generate(reps = 1000, type = "bootstrap") %>% # change `type` to "bootstrap"
# change stat to "diff in means"
calculate(stat = "diff in means", order = c("nonsmoker", "smoker"))
percentile_ci <- bootstrap_dist %>%
get_confidence_interval(level = 0.95, type = "percentile")
visualize(bootstrap_dist) +
shade_confidence_interval(percentile_ci)
se_ci <- boostrap_dist %>%
get_confidence_interval(level = 0.95, type = "se",
point_estimate = obs_t)
se_ci
set.seed(42)
bootstrap_dist <- ncbirths_complete %>%
specify(weight ~ habit) %>%
# remove hypothesize()
# hypothesize(null = "independence") %>%
generate(reps = 1000, type = "bootstrap") %>% # change `type` to "bootstrap"
# change stat to "diff in means"
calculate(stat = "diff in means", order = c("nonsmoker", "smoker"))
percentile_ci <- bootstrap_dist %>%
get_confidence_interval(level = 0.95, type = "percentile")
percentile_ci <- bootstrap_dist %>%
get_confidence_interval(level = 0.95, type = "percentile")
percentile_ci
base_r_res$conf.int
set.seed(42)
bootstrap_dist <- ncbirths_complete %>%
specify(weight ~ habit) %>%
# remove hypothesize()
# hypothesize(null = "independence") %>%
generate(reps = 5000, type = "bootstrap") %>% # change `type` to "bootstrap"
# change stat to "diff in means"
calculate(stat = "diff in means", order = c("nonsmoker", "smoker"))
se_ci <- bootstrap_distribution %>%
get_confidence_interval(level = 0.95, type = "se",
point_estimate =
ncbirths_complete %>%
specify(weight ~ habit) %>%
calculate(stat = "diff in means",
order = c("nonsmoker", "smoker")))
se_ci <- bootstrap_dist %>%
get_confidence_interval(level = 0.95, type = "se",
point_estimate =
ncbirths_complete %>%
specify(weight ~ habit) %>%
calculate(stat = "diff in means",
order = c("nonsmoker", "smoker")))
se_ci
base_r_res$conf.int
set.seed(42)
bootstrap_dist <- ncbirths_complete %>%
specify(weight ~ habit) %>%
# remove hypothesize()
# hypothesize(null = "independence") %>%
generate(reps = 5000, type = "bootstrap") %>% # change `type` to "bootstrap"
# change stat to "diff in means"
calculate(stat = "diff in means", order = c("nonsmoker", "smoker"))
base_r_res$conf.int
library(tidyverse)
library(infer)
library(rstatix)
library(openintro)
library(kableExtra)
library(xaringanExtra)
install.packages("xaringanExtra")
library(tidyverse)
library(infer)
library(rstatix)
library(openintro)
library(kableExtra)
library(xaringanExtra)
library(tidyverse)
library(infer)
library(rstatix)
library(openintro)
library(kableExtra)
library(xaringanExtra}
library(tidyverse)
library(infer)
library(rstatix)
library(openintro)
library(kableExtra)
library(xaringanExtra)
install.packages("xaringanExtra}.")
install.packages("xaringanExtra")
library(tidyverse)
library(infer)
library(rstatix)
library(openintro)
library(kableExtra)
library(xaringan)
library(xaringanExtra)
output_code <-
"````
```{r, eval=TRUE}`r ''`
library(dplyr)
mtcars %>%
group_by(cyl) %>%
summarize(n = n(), mean = mean(mpg))
```\n````"
cat(output_code)
output_code <-
"
```{r, eval=TRUE}`r ''`
library(dplyr)
mtcars %>%
group_by(cyl) %>%
summarize(n = n(), mean = mean(mpg))
```\n"
cat(output_code)
output_code <-
"
```{r, eval=TRUE}`r ''`
library(dplyr)
mtcars %>%
group_by(cyl) %>%
summarize(n = n(), mean = mean(mpg))
```"
cat(output_code)
output_code <-
"
```{r, eval=TRUE}
library(dplyr)
mtcars %>%
group_by(cyl) %>%
summarize(n = n(), mean = mean(mpg))
```"
cat(output_code)
output_code <-
"
```{r base_r_t}
base_r_res <- t.test(weight ~ habit, data = ncbirths_complete, alternative= 'two.sided')
base_r_res
```"
cat(output_code)
percentile_ci <- bootstrap_dist %>%
get_confidence_interval(level = 0.95, type = "percentile")
percentile_ci
se_ci <- bootstrap_dist %>%
get_confidence_interval(level = 0.95, type = "se",
point_estimate =
ncbirths_complete %>%
specify(weight ~ habit) %>%
calculate(stat = "diff in means",
order = c("nonsmoker", "smoker")))
se_ci
se_ci <- bootstrap_dist %>%
get_confidence_interval(level = 0.95, type = "se",
point_estimate =
ncbirths_complete %>%
specify(weight ~ habit) %>%
calculate(stat = "diff in means",
order = c("nonsmoker", "smoker")))
se_ci
se_ci %>% pull()
se_ci %>% pull()
se_ci
se_ci[[1]]
se_ci[[1]]
se_ci[[2]]
ncbirths_complete %>%
specify(weight ~ habit) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute")
ncbirths_complete %>%
specify(weight ~ habit) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute")
