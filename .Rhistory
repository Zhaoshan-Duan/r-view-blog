?ncbirths
?openintro::ncbirths
data(ncbirths)
head(ncbirths)
library(moderndive)
library(tidyverse)
library(infer)
library(openintro)
data(ncbirths)
head(ncbirths)
data(ncbirths)
head(ncbirths)
dim(ncbirths)
head(ncbirths)
info(ncbirths)
skim::skimr(ncbirths)
skimr::skim(ncbirths)
head(ncbirths)
skimr::skim(ncbirths)
head(ncbirths)
data(openintro::ncbirths)
str(ncbirths)
head(ncbirths)
knitr::include_graphics(here::here("figs", "https://d33wubrfki0l68.cloudfront.net/1cd0a53125c3b7dc4b12c04780f7f5b204ecbb1e/98111/images/flowcharts/infer/visualize.png"))
data(ncbirths)
str(ncbirths)
head(ncbirths)
ncbirths %>%
specify(weight ~ habit)
t.test(weight ~ habit, data=ncbirths)
t.test(weight ~ habit, data=ncbirths)
ncbirths %>%
specify(weight ~ habit) %>%
hypothesize(null = "point", mu=0)
ncbirths %>%
specify(weight ~ habit) %>%
hypothesize(null = "point", mu=0) %>%
calculate(stat = "t")
ncbirths %>%
specify(weight ~ habit) %>%
hypothesize(null = "point", mu=0) %>%
calculate(stat = "t") %>%
dplyr::pull()
ncbirths %>%
specify(weight ~ habit) %>%
hypothesize(null = "point", mu=0) %>%
calculate(stat = "diff in means", order = c("nonsmoker", "smoker"))
t.test(weight ~ habit, data=ncbirths)
ncbirths %>%
specify(weight ~ habit) %>%
hypothesize(null = "independence") %>%
calculate(stat = "diff in means", order = c("nonsmoker", "smoker"))
null <- ncbirths %>%
specify(weight ~ habit) %>%
hypothesize(null = "independence") %>%
calculate(stat = "diff in means", order = c("nonsmoker", "smoker"))
null
obs_diff_prop <- promotions %>%
specify(decision ~ gender, success = "promoted") %>%
calculate(stat = "diff in props", order = c("nonsmoker", "smoker"))
obs_diff_prop <- promotions %>%
specify(weight ~ habit) %>%
calculate(stat = "diff in props", order = c("nonsmoker", "smoker"))
obs_diff_prop <- ncbirths %>%
specify(weight ~ habit) %>%
calculate(stat = "diff in props", order = c("nonsmoker", "smoker"))
null_distribution %>%
get_p_value(obs_stat = obs_diff_prop, direction = "right")
obs_diff_prop <- ncbirths %>%
specify(weight ~ habit) %>%
calculate(stat = "diff in props", order = c("nonsmoker", "smoker"))
obs_diff_prop <- ncbirths %>%
specify(weight ~ habit) %>%
calculate(stat = "diff in means", order = c("nonsmoker", "smoker"))
obs_diff_prop
obs_diff_prop <- ncbirths %>%
specify(weight ~ habit) %>%
calculate(stat = "diff in means", order = c("nonsmoker", "smoker"))
obs_diff_prop;null
null_distribution %>%
get_p_value(obs_stat = obs_diff_prop, direction = "right")
null %>%
get_p_value(obs_stat = obs_diff_prop, direction = "right")
ncbirths %>%
specify(weight ~ habit) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "mean")
ncbirths %>%
specify(weight ~ habit) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "mean")
ncbirths %>%
specify(weight ~ habit) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c("nonsmoker", "smoker"))
observed_statistic <-ncbirths %>%
specify(weight ~ habit) %>%
calculate(stat = "diff in means", order = c("nonsmoker", "smoker"))
observed_statistic
null_dist<- ncbirths %>%
specify(weight ~ habit) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c("nonsmoker", "smoker"))
nrow(null_dist)
ncbirths %>%
specify(weight ~ habit) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute")
null_dist <- ncbirths %>%
specify(weight ~ habit) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c("nonsmoker", "smoker"))
observed_statistic <-ncbirths %>%
specify(weight ~ habit) %>%
calculate(stat = "diff in means", order = c("nonsmoker", "smoker"))
observed_statistic
visualize(null_distribution, bins = 10) +
shade_p_value(obs_stat = obs_diff_prop, direction = "right")
visualize(null_dist, bins = 10) +
shade_p_value(obs_stat = observed_statistic, direction = "right")
null_dist %>%
get_p_value(obs_stat = observed_statisti, direction = "right")
null_dist %>%
get_p_value(obs_stat = observed_statistic, direction = "right")
t.test(weight ~ habit, data=ncbirths)
bootstrap_distribution <- ncbirths %>%
specify(weight ~ habit) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "diff in means", order = c("nonsmoker", "smoker"))
percentile_ci <- bootstrap_distribution %>%
get_confidence_interval(level = 0.95, type = "percentile")
percentile_ci
visualize(null_dist, bins = 10) +
shade_p_value(obs_stat = observed_statistic, direction = "two-sided")
t_test(x = ncbirths,
formula = weight ~ habit,
order = c("nonsmoker", "smoker"),
alternative = "two-sided")
# 1. Write a function of tossing x dice
Dice<- function(x){
trial<- sample(1:6, x, replace=TRUE)
return(trial)
}
# 2. Replicate the experiment avoiding loop
results<- replicate(20000,Dice(3))
dat<- colSums(results)
sum(dat==6)/length(dat)
# 1. Write a function of tossing x dice
Dice<- function(x){
trial<- sample(1:6, x, replace=TRUE)
return(trial)
}
# 2. Replicate the experiment avoiding loop
results<- replicate(20000,Dice(3))
dat<- colSums(results)
sum(dat==6)/length(dat)
##Simulate one experiment of gambler's ruin
##parameter values
k <- 10
n <- 30
p <- 1/2
results1<- array()
results2<- array()
for(mc in 1:5000){
stake_n<- array() #keep records of one experiment
counter_n<- 0 #keep number of steps use
stake <- k
while (stake > 0 & stake < n) {
bet <- sample(c(-1,1),1,prob=c(1-p,p))
stake <- stake + bet
stake_n<- c(stake_n,stake)
counter_n<- counter_n+1
}
results1[mc]<- if (stake == 0) 1 else 0 #success(=1) if gambler loses all stake
results2[mc]<- counter_n
}
cat("the simulated probability of Gamble's ruin is",mean(results1),sep = "\t")
##Simulate one experiment of gambler's ruin
##parameter values
k <- 10
n <- 30
p <- 1/2
results1<- array()
results2<- array()
for(mc in 1:5000){
stake_n<- array() #keep records of one experiment
counter_n<- 0 #keep number of steps use
stake <- k
while (stake > 0 & stake < n) {
bet <- sample(c(-1,1),1,prob=c(1-p,p))
stake <- stake + bet
stake_n<- c(stake_n,stake)
counter_n<- counter_n+1
}
results1[mc]<- if (stake == 0) counter_n else 0 #success(=1) if gambler loses all stake
}
cat("the simulated probability of Gamble's ruin is",mean(results1),sep = "\t")
##Simulate one experiment of gambler's ruin
##parameter values
k <- 10
n <- 30
p <- 1/2
results1<- array()
results2<- array()
for(mc in 1:5000){
stake_n<- array() #keep records of one experiment
counter_n<- 0 #keep number of steps use
stake <- k
while (stake > 0 & stake < n) {
bet <- sample(c(-1,1),1,prob=c(1-p,p))
stake <- stake + bet
stake_n<- c(stake_n,stake)
counter_n<- counter_n+1
}
results1[mc]<- if (stake == 0) 1 else 0 #success(=1) if gambler loses all stake
results2[mc]<- counter_n
}
cat("the simulated probability of Gamble's ruin is",mean(results1),sep = "\t")
x <- t.test(weight ~ habit, data=ncbirths)
library(tidyverse)
library(infer)
library(openintro)
data(ncbirths)
str(ncbirths)
head(ncbirths)
ncbirths %>%
specify(weight ~ habit)
nc_nosmoker<- subset(ncbirths ,habit == "nonsmoker")
nc_smoker<- subset(ncbirths ,habit == "smoker")
ncbirths %>%
specify(weight ~ habit) %>%
hypothesize(null = "independence")
ncbirths %>%
specify(weight ~ habit) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute")
null_dist <- ncbirths %>%
specify(weight ~ habit) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c("nonsmoker", "smoker"))
observed_statistic <-ncbirths %>%
specify(weight ~ habit) %>%
calculate(stat = "diff in means", order = c("nonsmoker", "smoker"))
observed_statistic
x <- t.test(weight ~ habit, data=ncbirths)
x$conf.int
x$conf.int[1]
x$conf.int[[1]]
x_1 <- x$conf.int[[1]]
bootstrap_distribution <- ncbirths %>%
specify(weight ~ habit) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "diff in means", order = c("nonsmoker", "smoker"))
percentile_ci <- bootstrap_distribution %>%
get_confidence_interval(level = 0.95, type = "percentile")
percentile_ci
percentile_ci$lower_ci
ggplot(data = ncbirths,
aes(x = habit, y = weight)) +
geom_boxplot()
ncbirths %>%
select(habits, weight) %>%
drop_na() %>%
ggplot(aes(x = habit, y = weight)) +
geom_boxplot()
ncbirths %>%
select(habit, weight) %>%
drop_na() %>%
ggplot(aes(x = habit, y = weight)) +
geom_boxplot()
ncbirths %>%
select(habit, weight) %>%
drop_na() %>%
ggplot(aes(x = habit, y = weight)) +
geom_boxplot()
ncbirths %>%
select(habit, weight) %>%
drop_na() %>%
ggplot(aes(x = habit, y = weight)) +
geom_boxplot()+
labs(x = "Smoking status of mother", y = "Birth weight of baby (in lbs)")
bootstrap_distribution <- ncbirths %>%
specify(weight ~ habit) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "diff in means", order = c("nonsmoker", "smoker"))
percentile_ci <- bootstrap_distribution %>%
get_confidence_interval(level = 0.95, type = "percentile")
percentile_ci$
bootstrap_distribution <- ncbirths %>%
specify(weight ~ habit) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "diff in means", order = c("nonsmoker", "smoker"))
percentile_ci <- bootstrap_distribution %>%
get_confidence_interval(level = 0.95, type = "percentile")
wtg_diff <- nc_nosmoker$weight - nc_smoker$weight
#wtg_diff <- wtg_diff[!is.na(wtg_diff)] # remove missing entries (NA values)
n <- length(ncbirths)
wtg_diff
hist(wtg_diff, breaks=100, xlim=c(-0.4,0.4))
